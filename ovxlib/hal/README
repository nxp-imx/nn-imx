README(For RK3328):

=====================================================================================================================

SERVER

(UBUNTU 16.04: FULL BUILD)sw-builder@sw175:/lhome/dandan.he/android/rk3328_box_sdk

BOARD:
On Shanghai site, the board connect to sw175, which pc with ubuntu 16.04.
ubuser@sw175

BUILD COMMANDS
. build/envsetup.sh
lunch rk3328_box-userdebug

=====================================================================================================================

BUILD & RUN

1. Copy ovx to frameworks/ml/nn/driver.
2. Make soft link to viv ovx driver.
   ln -s <ANDROID_ROOT>/vendor/rockchip/common/nn/dev153323.5.3494_p5.0.0/sdk/inc/ ovx_inc
 
3. Build ovx driver(dev_5.0.0 CL152495 or later).
   cd ovx
   mm

4. Install driver(copy android.hardware.neuralnetworks@1.0-service-ovx-driver out/target/product/rk3328_box/system/bin/android.hardware.neuralnetworks@1.0-service-ovx-driver to device(e.g. /vendor/misc/hw)).
   . install.sh drv

5. Registor hal hidl.
   Add IDevice sample-all ovx-driver to hidl manifest.

/vendor/manifest.xml

    <hal format="hidl">
        <name>android.hardware.wifi.supplicant</name>
        <transport>hwbinder</transport>
        <version>1.0</version>
        <interface>
            <name>ISupplicant</name>
            <instance>default</instance>
        </interface>
    </hal>
+    <hal format="hidl">
+        <name>android.hardware.neuralnetworks</name>
+        <transport>hwbinder</transport>
+        <version>1.0</version>
+        <interface>
+            <name>IDevice</name>
+            <instance>sample-all</instance>
+            <instance>ovx-driver</instance>
+        </interface>
+    </hal>

    <sepolicy>
        <version>27.0</version>
    </sepolicy>
</manifest>

6. Build VIV driver and push to device.
   a. Enable VIVANTE_ENABLE_VSIMULATOR from Android.mk.def, and copy install_viv.sh to <VIV_DRIVER>

   -VIVANTE_ENABLE_VSIMULATOR    ?= 0
   +VIVANTE_ENABLE_VSIMULATOR    ?= 1

   b. Build Ovx driver and Vsimulator.
   mm

   c. install driver and vsimulator.
   . install.sh drv
   adb push <VIV_DRIVER>/* /system/lib64
   adb sync

7. Start android nn driver.
   adb shell
   cd /vender/misc/hw/
   chmod a+x android.hardware.neuralnetworks@1.0-service-ovx-driver
   ./android.hardware.neuralnetworks@1.0-service-ovx-driver

8. Build case and run Application on other cmd shell.
   cd frameworks/ml/nn/driver/sample
   mm 
   adb push <ANDROID_ROOT>/out/target/roduct/rk3328_box/data/nativetest64/NeuralNetworksTest_static/NeuralNetworksTest_static /vendor/misc/
   adb shell
   cd /vendor/misc/
   chmod a+x NeuralNetworksTest_static
   ./NeuralNetworksTest_static --gtest_filter=GeneratedTests.add


=====================================================================================================================

DEBUG

debug.sh and viv_debug.sh are quickly debug script, FYI.

. ./debug.sh <ADDRESS>
. ./viv_debug.sh <ADDRESS>
e.g.

DEBUG   : *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
DEBUG   : Build fingerprint: 'Android/rk3328_box/rk3328_box:8.1.0/OPM1.171019.011/zf01181800:userdebug/test-keys'
DEBUG   : Revision: '0'
DEBUG   : ABI: 'arm64'
DEBUG   : pid: 9157, tid: 9167, name: HwBinder:9157_2  >>> ./android.hardware.neuralnetworks@1.0-service-ovx-driver <<<
DEBUG   : signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0xb0
DEBUG   : Cause: null pointer dereference
DEBUG   :     x0   0000000000000001  x1   0000000000000000  x2   0000000000000000  x3   0000000000000002
DEBUG   :     x4   000000000000002e  x5   ffffffffffffff80  x6   0000000000000000  x7   80ffffffffffffff
DEBUG   :     x8   00000000fffffff9  x9   b56f4efba3598d04  x10  0000000000000000  x11  00000000000023cf
DEBUG   :     x12  0000007a98bfe4a8  x13  ffffffffffffffff  x14  ffffffffffffff00  x15  ffffffffffffffff
DEBUG   :     x16  0000007ad1c3ad28  x17  0000007ad08ad790  x18  0000007a8e5c70c0  x19  0000007a98bff588
DEBUG   :     x20  0000007a8e5caa00  x21  0000000000000000  x22  0000000000000001  x23  0000007a8e5ceaf8
DEBUG   :     x24  0000007ad0257320  x25  0000000000000000  x26  0000007ad3592050  x27  0000007a98bfeff0
DEBUG   :     x28  0000007a98bff310  x29  0000007a98bfec30  x30  0000007ad32ae27c
DEBUG   :     sp   0000007a98bfda90  pc   0000007ad32ae284  pstate 0000000060000000
DEBUG   :
DEBUG   : backtrace:
DEBUG   :     #00 pc 000000000002a284  /system/lib64/libOpenVX.so (vxVerifyGraph+124)
DEBUG   :     #01 pc 000000000000b44c  /vendor/misc/hw/android.hardware.neuralnetworks@1.0-service-ovx-driver (android::nn::OvxExecutor::initalize(android::hardware::neuralnetworks::V1_0::Model const*, std::__1::vector<android::nn::RunTimePoolInfo, std::__1::allocator<android::nn::RunTimePoolInfo>>*)+32)
DEBUG   :     #02 pc 0000000000004638  /vendor/misc/hw/android.hardware.neuralnetworks@1.0-service-ovx-driver (android::nn::ovx_driver::OvxDevice::prepareModel(android::hardware::neuralnetworks::V1_0::Model const&, android::sp<android::hardware::neuralnetworks::V1_0::IPreparedModelCallback> const&)+240)
DEBUG   :     #03 pc 000000000002922c  /system/lib64/android.hardware.neuralnetworks@1.0.so (android::hardware::neuralnetworks::V1_0::BnHwDevice::_hidl_prepareModel(android::hidl::base::V1_0::BnHwBase*, android::hardware::Parcel const&, android::hardware::Parcel*, std::__1::function<void (android::hardware::Parcel&)>)+456)
DEBUG   :     #04 pc 0000000000029e08  /system/lib64/android.hardware.neuralnetworks@1.0.so (android::hardware::neuralnetworks::V1_0::BnHwDevice::onTransact(unsigned int, android::hardware::Parcel const&, android::hardware::Parcel*, unsigned int, std::__1::function<void (android::hardware::Parcel&)>)+1084)
DEBUG   :     #05 pc 0000000000011800  /system/lib64/libhwbinder.so (android::hardware::BHwBinder::transact(unsigned int, android::hardware::Parcel const&, android::hardware::Parcel*, unsigned int, std::__1::function<void (android::hardware::Parcel&)>)+132)
DEBUG   :     #06 pc 0000000000015384  /system/lib64/libhwbinder.so (android::hardware::IPCThreadState::executeCommand(int)+576)
DEBUG   :     #07 pc 000000000001508c  /system/lib64/libhwbinder.so (android::hardware::IPCThreadState::getAndExecuteCommand()+164)
DEBUG   :     #08 pc 0000000000015794  /system/lib64/libhwbinder.so (android::hardware::IPCThreadState::joinThreadPool(bool)+60)
DEBUG   :     #09 pc 000000000001f9b8  /system/lib64/libhwbinder.so (android::hardware::PoolThread::threadLoop()+24)
DEBUG   :     #10 pc 00000000000114e8  /system/lib64/libutils.so (android::Thread::_threadLoop(void*)+280)
DEBUG   :     #11 pc 0000000000067d80  /system/lib64/libc.so (__pthread_start(void*)+36)
DEBUG   :     #12 pc 000000000001ec18  /system/lib64/libc.so (__start_thread+68)


. ./viv_debug.sh 000000000002a284
vendor/rockchip/common/nn/dev153323.5.3494_p5.0.0/driver/khronos/libOpenVX/driver/src/gc_vx_graph.c:6172

. ./debug.sh 000000000000b44c
frameworks/ml/nn/driver/ovx/OvxExecutor.cpp:556


=====================================================================================================================

About NeuralNetworksTest

This program contains tests written using Google Test. You can use the
following command line flags to control its behavior:

Test Selection:
  --gtest_list_tests
      List the names of all tests instead of running them. The name of
      TEST(Foo, Bar) is "Foo.Bar".
  --gtest_filter=POSTIVE_PATTERNS[-NEGATIVE_PATTERNS]
      Run only the tests whose name matches one of the positive patterns but
      none of the negative patterns. '?' matches any single character; '*'
      matches any substring; ':' separates two patterns.
  --gtest_also_run_disabled_tests
      Run all disabled tests too.

Test Execution:
  --gtest_repeat=[COUNT]
      Run the tests repeatedly; use a negative count to repeat forever.
  --gtest_shuffle
      Randomize tests' orders on every iteration.
  --gtest_random_seed=[NUMBER]
      Random number seed to use for shuffling test orders (between 1 and
      99999, or 0 to use a seed based on the current time).

Test Output:
  --gtest_color=(yes|no|auto)
      Enable/disable colored output. The default is auto.
  --gtest_print_time=0
      Don't print the elapsed time of each test.
  --gtest_output=xml[:DIRECTORY_PATH/|:FILE_PATH]
      Generate an XML report in the given directory or with the given file
      name. FILE_PATH defaults to test_details.xml.
  --gtest_stream_result_to=HOST:PORT
      Stream test results to the given server.

Assertion Behavior:
  --gtest_death_test_style=(fast|threadsafe)
      Set the default death test style.
  --gtest_break_on_failure
      Turn assertion failures into debugger break-points.
  --gtest_throw_on_failure
      Turn assertion failures into C++ exceptions.
  --gtest_catch_exceptions=0
      Do not report exceptions as test failures. Instead, allow them
      to crash the program or throw a pop-up (on Windows).

Except for --gtest_list_tests, you can alternatively set the corresponding
environment variable of a flag (all letters in upper-case). For example, to
disable colored text output, you can either specify --gtest_color=no or set
the GTEST_COLOR environment variable to no.

For more information, please read the Google Test documentation at
https://github.com/google/googletest/. If you find a bug in Google Test
(not one in your own code or tests), please report it to
<googletestframework@googlegroups.com>.
/NeuralNetworksTest_static --gtest_list_tests                                 <
MemoryTest.
  TestASharedMemory
  TestFd
TrivialTest.
  AddTwo
  AddThree
  BroadcastAddTwo
  BroadcastMulTwo
ValidationTest.
  CreateModel
ValidationTestModel.
  AddOperand
  SetOperandValue
  AddOperation
  SetInputsAndOutputs
  Finish
  CreateCompilation
ValidationTestCompilation.
  SetPreference
  CreateExecution
  Finish
GeneratedTests.
  add_broadcast_quant8
  add
  add_quant8
  avg_pool_float_1
  avg_pool_float_2
  avg_pool_float_3
  avg_pool_float_4
  avg_pool_quant8_1
  avg_pool_quant8_2
  avg_pool_quant8_3
  avg_pool_quant8_4
  concat_float_1
  concat_float_2
  concat_float_3
  concat_quant8_1
  concat_quant8_2
  concat_quant8_3
  conv_float_channels
  conv_float_channels_weights_as_inputs
  conv_float_large
  conv_float_large_weights_as_inputs
  conv_float
  conv_float_weights_as_inputs
  conv_quant8_channels
  conv_quant8_channels_weights_as_inputs
  conv_quant8_large
  conv_quant8_large_weights_as_inputs
  conv_quant8
  conv_quant8_overflow
  conv_quant8_overflow_weights_as_inputs
  conv_quant8_weights_as_inputs
  depth_to_space_float_1
  depth_to_space_float_2
  depth_to_space_float_3
  depth_to_space_quant8_1
  depth_to_space_quant8_2
  depthwise_conv2d_float_large_2
  depthwise_conv2d_float_large_2_weights_as_inputs
  depthwise_conv2d_float_large
  depthwise_conv2d_float_large_weights_as_inputs
  depthwise_conv2d_float
  depthwise_conv2d_float_weights_as_inputs
  depthwise_conv2d_quant8_large
  depthwise_conv2d_quant8_large_weights_as_inputs
  depthwise_conv2d_quant8
  depthwise_conv2d_quant8_weights_as_inputs
  dequantize
  embedding_lookup
  floor
  fully_connected_float_large
  fully_connected_float_large_weights_as_inputs
  fully_connected_float
  fully_connected_float_weights_as_inputs
  fully_connected_quant8_large
  fully_connected_quant8_large_weights_as_inputs
  fully_connected_quant8
  fully_connected_quant8_weights_as_inputs
  hashtable_lookup_float
  hashtable_lookup_quant8
  l2_normalization_large
  l2_normalization
  l2_pool_float_large
  l2_pool_float
  local_response_norm_float_1
  local_response_norm_float_2
  local_response_norm_float_3
  local_response_norm_float_4
  logistic_float_1
  logistic_float_2
  logistic_quant8_1
  logistic_quant8_2
  lsh_projection_2
  lsh_projection
  lsh_projection_weights_as_inputs
  lstm2
  lstm2_state2
  lstm2_state
  lstm3
  lstm3_state2
  lstm3_state3
  lstm3_state
  lstm
  lstm_state2
  lstm_state
  max_pool_float_1
  max_pool_float_2
  max_pool_float_3
  max_pool_quant8_1
  max_pool_quant8_2
  max_pool_quant8_3
  mobilenet_quantized
  mul_broadcast_quant8
  mul
  mul_quant8
  mul_relu
  relu1_float_1
  relu1_float_2
  relu1_quant8_1
  relu1_quant8_2
  relu6_float_1
  relu6_float_2
  relu6_quant8_1
  relu6_quant8_2
  relu_float_1
  relu_float_2
  relu_quant8_1
  relu_quant8_2
  reshape
  reshape_quant8
  reshape_quant8_weights_as_inputs
  reshape_weights_as_inputs
  resize_bilinear
  rnn
  rnn_state
  softmax_float_1
  softmax_float_2
  softmax_quant8_1
  softmax_quant8_2
  space_to_depth_float_1
  space_to_depth_float_2
  space_to_depth_float_3
  space_to_depth_quant8_1
  space_to_depth_quant8_2
  svdf
  svdf_state
  tanh
  conv_1_h3_w2_SAME
  conv_1_h3_w2_VALID
  conv_3_h3_w2_SAME
  conv_3_h3_w2_VALID
  depthwise_conv
  mobilenet
PartitioningTest.
  SimpleModel
  Cpu
MemoryTest.
  TestASharedMemory
  TestFd
TrivialTest.
  AddTwo
  AddThree
  BroadcastAddTwo
  BroadcastMulTwo
ValidationTest.
  CreateModel
ValidationTestModel.
  AddOperand
  SetOperandValue
  AddOperation
  SetInputsAndOutputs
  Finish
  CreateCompilation
ValidationTestCompilation.
  SetPreference
  CreateExecution
  Finish
GeneratedTests.
  add_broadcast_quant8
  add
  add_quant8
  avg_pool_float_1
  avg_pool_float_2
  avg_pool_float_3
  avg_pool_float_4
  avg_pool_quant8_1
  avg_pool_quant8_2
  avg_pool_quant8_3
  avg_pool_quant8_4
  concat_float_1
  concat_float_2
  concat_float_3
  concat_quant8_1
  concat_quant8_2
  concat_quant8_3
  conv_float_channels
  conv_float_channels_weights_as_inputs
  conv_float_large
  conv_float_large_weights_as_inputs
  conv_float
  conv_float_weights_as_inputs
  conv_quant8_channels
  conv_quant8_channels_weights_as_inputs
  conv_quant8_large
  conv_quant8_large_weights_as_inputs
  conv_quant8
  conv_quant8_overflow
  conv_quant8_overflow_weights_as_inputs
  conv_quant8_weights_as_inputs
  depth_to_space_float_1
  depth_to_space_float_2
  depth_to_space_float_3
  depth_to_space_quant8_1
  depth_to_space_quant8_2
  depthwise_conv2d_float_large_2
  depthwise_conv2d_float_large_2_weights_as_inputs
  depthwise_conv2d_float_large
  depthwise_conv2d_float_large_weights_as_inputs
  depthwise_conv2d_float
  depthwise_conv2d_float_weights_as_inputs
  depthwise_conv2d_quant8_large
  depthwise_conv2d_quant8_large_weights_as_inputs
  depthwise_conv2d_quant8
  depthwise_conv2d_quant8_weights_as_inputs
  dequantize
  embedding_lookup
  floor
  fully_connected_float_large
  fully_connected_float_large_weights_as_inputs
  fully_connected_float
  fully_connected_float_weights_as_inputs
  fully_connected_quant8_large
  fully_connected_quant8_large_weights_as_inputs
  fully_connected_quant8
  fully_connected_quant8_weights_as_inputs
  hashtable_lookup_float
  hashtable_lookup_quant8
  l2_normalization_large
  l2_normalization
  l2_pool_float_large
  l2_pool_float
  local_response_norm_float_1
  local_response_norm_float_2
  local_response_norm_float_3
  local_response_norm_float_4
  logistic_float_1
  logistic_float_2
  logistic_quant8_1
  logistic_quant8_2
  lsh_projection_2
  lsh_projection
  lsh_projection_weights_as_inputs
  lstm2
  lstm2_state2
  lstm2_state
  lstm3
  lstm3_state2
  lstm3_state3
  lstm3_state
  lstm
  lstm_state2
  lstm_state
  max_pool_float_1
  max_pool_float_2
  max_pool_float_3
  max_pool_quant8_1
  max_pool_quant8_2
  max_pool_quant8_3
  mobilenet_quantized
  mul_broadcast_quant8
  mul
  mul_quant8
  mul_relu
  relu1_float_1
  relu1_float_2
  relu1_quant8_1
  relu1_quant8_2
  relu6_float_1
  relu6_float_2
  relu6_quant8_1
  relu6_quant8_2
  relu_float_1
  relu_float_2
  relu_quant8_1
  relu_quant8_2
  reshape
  reshape_quant8
  reshape_quant8_weights_as_inputs
  reshape_weights_as_inputs
  resize_bilinear
  rnn
  rnn_state
  softmax_float_1
  softmax_float_2
  softmax_quant8_1
  softmax_quant8_2
  space_to_depth_float_1
  space_to_depth_float_2
  space_to_depth_float_3
  space_to_depth_quant8_1
  space_to_depth_quant8_2
  svdf
  svdf_state
  tanh
  conv_1_h3_w2_SAME
  conv_1_h3_w2_VALID
  conv_3_h3_w2_SAME
  conv_3_h3_w2_VALID
  depthwise_conv
  mobilenet
PartitioningTest.
  SimpleModel
  Cpu
rk3328_box:/vendor/misc #
rk3328_box:/vendor/misc #./NeuralNetworksTest_static --gtest_list_tests
rk3328_box:/vendor/misc #./NeuralNetworksTest_static --gtest_color=yes
rk3328_box:/vendor/misc #./NeuralNetworksTest_static --gtest_filter=ValidationTest*
rk3328_box:/vendor/misc #./NeuralNetworksTest_static --gtest_filter=ValidationTestCompilation.SetPreference
