#include "cl_viv_vx_ext.h"

_viv_uniform int input_ZP;
_viv_uniform VXC_512Bits uniU8EvenBinSubZP_MulM_2x8;
_viv_uniform VXC_512Bits uniEncodeUint8_4x8;
_viv_uniform VXC_512Bits uniS16AddOutZP_2x8;
_viv_uniform vxc_uint4 packed_outputZP;

__kernel void poolingWithArgmaxU8_s2k2p0_2D
    (
    image2d_array_t tensorIn,
    image2d_array_t tensorOut,
    image2d_array_t axis,
    int type,
    int sizeX,
    int sizeY,
    int paddingX,
    int paddingY
    )
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));
    vxc_uchar16 din0, din1;
    vxc_uchar16 maxDataVer, maxDataVer1;
    vxc_uchar16 din0EqualTmp, din1EqualTmp;
    vxc_uchar8 axisEncode;
    vxc_uchar8 axisOut;

    VXC_ReadImage(din0, tensorIn, coord, VXC_5BITOFFSET_XY(0, 0),\
        VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(din1, tensorIn, coord, VXC_5BITOFFSET_XY(0, 1),\
        VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
    int2 coordOut = coord >> 1;
    maxDataVer  = max(din0, din1);
    maxDataVer1 = maxDataVer.s1032547698badcfe;
    maxDataVer  = max(maxDataVer1, maxDataVer);

    vxc_short8 tmp;
    uchar zp = input_ZP;
    VXC_DP2x8(tmp, maxDataVer, zp, VXC_MODIFIER(0, 7, 0, VXC_RM_ToNearestEven, 1),\
        uniU8EvenBinSubZP_MulM_2x8);
    vxc_uchar16 packed_outZP;
    _viv_asm(COPY, packed_outZP, packed_outputZP, 16);
    VXC_DP2x8(maxDataVer1, tmp, packed_outZP, VXC_MODIFIER(0, 7, 0, VXC_RM_ToNearestEven, 1),\
        uniS16AddOutZP_2x8);
    VXC_WriteImage(tensorOut, coordOut, maxDataVer1, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));

    //get axis
    VXC_Clamp(din0EqualTmp, din0, maxDataVer, maxDataVer, VXC_MODIFIER_CLAMP(0, 15, 0, 1));
    VXC_Clamp(din1EqualTmp, din1, maxDataVer, maxDataVer, VXC_MODIFIER_CLAMP(0, 15, 0, 1));
    din0EqualTmp &= (vxc_uchar16)(1);
    din1EqualTmp &= (vxc_uchar16)(1);

    VXC_DP4x8(axisEncode, din0EqualTmp, din1EqualTmp, VXC_MODIFIER_BIN(0, 7, 0), uniEncodeUint8_4x8);
    axisOut = clz(axisEncode);//output
    //write data out
    VXC_WriteImage(axis, coordOut, axisOut, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
}


