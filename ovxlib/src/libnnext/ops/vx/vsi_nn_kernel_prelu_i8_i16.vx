#include "cl_viv_vx_ext.h"

_viv_uniform VXC_512Bits uniPreluInt8Lo_2x8b;
_viv_uniform VXC_512Bits uniPreluInt8Hi_2x8b;
_viv_uniform VXC_512Bits uniPreluInt16_2x8b;
_viv_uniform VXC_512Bits uniPreluInt8_2x8;
_viv_uniform VXC_512Bits uniPreluInt16_4x4;
_viv_uniform VXC_512Bits uniMergeMultiplier_2x8;
_viv_uniform int multiplier;
#if (VX_VERSION==2)
__kernel void vxcParametricRelu_int8_opt
(
    image2d_array_t input,
    image2d_array_t para,
    image2d_array_t output
)
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));

    vxc_char16 in, dst;
    vxc_char32 src;
    vxc_short8 para_s16;
    vxc_half8 paraHlf;
    VXC_ReadImage(in, input, coord.xy, VXC_5BITOFFSET_XY(0,0),\
        VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(para_s16, para, coord.yy, VXC_5BITOFFSET_XY(0,0),\
        VXC_MODIFIER(0, 0, 0, VXC_RM_TowardZero, 0));
    _viv_asm(COPY, paraHlf, para_s16, 4);
    src.hi = max(in, 0);
    src.lo = min(in, 0);

    VXC_DP2x8_b_(dst, src.hi, src.lo, paraHlf, VXC_MODIFIER(0, 7, 0, VXC_RM_ToNearestEven, 1),\
        uniPreluInt8Lo_2x8b);
    VXC_DP2x8_b_(dst, src.hi, src.lo, paraHlf, VXC_MODIFIER(8, 15, 0, VXC_RM_ToNearestEven, 1),\
        uniPreluInt8Hi_2x8b);
    VXC_WriteImage(output, coord, dst, VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
}

__kernel void vxcParametricRelu_int8_opt1
(
    __read_only  image2d_array_t input,
    __read_only  image2d_array_t para,
    __write_only image2d_array_t output
)
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));

    vxc_char16 in, dst;
    vxc_char32 src;
    vxc_short8 para_s16;
    vxc_half8 paraHlf;
    VXC_ReadImage(in, input, coord.xy, VXC_5BITOFFSET_XY(0,0),\
        VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(para_s16, para, coord.yy, VXC_5BITOFFSET_XY(0,0),\
        VXC_MODIFIER(0, 0, 0, VXC_RM_TowardZero, 0));
    _viv_asm(COPY, paraHlf, para_s16, 4);
    src.hi = max(in, 0);
    src.lo = min(in, 0);

    unsigned short src2;
    _viv_asm(COPY, src2, multiplier, 4);
    VXC_DP2x8(paraHlf, paraHlf, src2, VXC_MODIFIER(0, 1, 0, VXC_RM_TowardZero, 0),\
        uniMergeMultiplier_2x8);
    VXC_DP2x8_b_(dst, src.hi, src.lo, paraHlf, VXC_MODIFIER(0, 7, 0, VXC_RM_ToNearestEven, 1),\
        uniPreluInt8Lo_2x8b);
    VXC_DP2x8_b_(dst, src.hi, src.lo, paraHlf, VXC_MODIFIER(8, 15, 0, VXC_RM_ToNearestEven, 1),\
        uniPreluInt8Hi_2x8b);
    VXC_WriteImage(output, coord, dst, VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
}

__kernel void vxcParametricReluInt16_Int16_opt
    (
    image2d_array_t input,
    image2d_array_t para,
    image2d_array_t output
    )
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));

    vxc_short8 in, dst;
    vxc_short16 src;
    vxc_short8 para_s16;
    vxc_half8 paraHlf;
    VXC_ReadImage(in, input, coord.xy, VXC_5BITOFFSET_XY(0,0),\
        VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(para_s16, para, coord.yy, VXC_5BITOFFSET_XY(0,0),\
        VXC_MODIFIER(0, 0, 0, VXC_RM_TowardZero, 0));
    _viv_asm(COPY, paraHlf, para_s16, 4);
    src.hi = max(in, 0);
    src.lo = min(in, 0);
    VXC_DP2x8_b_(dst, src.hi, src.lo, paraHlf, VXC_MODIFIER(0, 7, 0, VXC_RM_ToNearestEven, 1),\
        uniPreluInt16_2x8b);
    VXC_WriteImage(output, coord, dst, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
}

__kernel void vxcParametricReluInt16_Int16_opt1
    (
    image2d_array_t input,
    image2d_array_t para,
    image2d_array_t output
    )
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));

    vxc_short8 in, dst;
    vxc_short16 src;
    vxc_short8 para_s16;
    vxc_half8 paraHlf;
    VXC_ReadImage(in, input, coord.xy, VXC_5BITOFFSET_XY(0,0),\
        VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(para_s16, para, coord.yy, VXC_5BITOFFSET_XY(0,0),\
        VXC_MODIFIER(0, 0, 0, VXC_RM_TowardZero, 0));
    _viv_asm(COPY, paraHlf, para_s16, 4);
    src.hi = max(in, 0);
    src.lo = min(in, 0);

    unsigned short src2;
    _viv_asm(COPY, src2, multiplier, 4);
    VXC_DP2x8(paraHlf, paraHlf, src2, VXC_MODIFIER(0, 1, 0, VXC_RM_TowardZero, 0),\
        uniMergeMultiplier_2x8);
    VXC_DP2x8_b_(dst, src.hi, src.lo, paraHlf, VXC_MODIFIER(0, 7, 0, VXC_RM_ToNearestEven, 1),\
        uniPreluInt16_2x8b);
    VXC_WriteImage(output, coord, dst, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
}

#else

//__kernel void vxcParametricRelu_int8_evis1
__kernel void vxcParametricRelu_int8_opt
(
    image2d_array_t input,
    image2d_array_t para,
    image2d_array_t output
)
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));
    vxc_char16 in, dst;
    vxc_char16 src0, src1, src;
    vxc_short8 para_s16;
    vxc_half8 paraHlf;
    VXC_ReadImage(in, input, coord.xy, VXC_5BITOFFSET_XY(0,0),\
        VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(para_s16, para, coord.yy, VXC_5BITOFFSET_XY(0,0),\
        VXC_MODIFIER(0, 0, 0, VXC_RM_TowardZero, 0));
    _viv_asm(COPY, paraHlf, para_s16, 4);
    src0 = max(in, 0);
    src1 = min(in, 0);
    _viv_asm(COPY, src, src0, 16);
    src.s89abcdef = src1.s01234567;
    VXC_DP2x8(dst, src, paraHlf, VXC_MODIFIER(0, 7, 0, VXC_RM_ToNearestEven, 1), uniPreluInt8_2x8);
    _viv_asm(COPY, src, src1, 16);
    src.s01234567 = src0.s89abcdef;
    VXC_DP2x8(dst, src, paraHlf, VXC_MODIFIER(8, 15, 0, VXC_RM_ToNearestEven, 1), uniPreluInt8_2x8);
    VXC_WriteImage(output, coord, dst, VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
}

//__kernel void vxcParametricReluInt16_Int16_evis1
__kernel void vxcParametricReluInt16_Int16_opt
    (
    image2d_array_t input,
    image2d_array_t para,
    image2d_array_t output
    )
{
    int2 coord = (int2)(get_global_id(0), get_global_id(1));
    vxc_short8 in, dst;
    vxc_short8 src0, src1, src;
    vxc_short8 para_s16;
    vxc_half8 paraHlf;
    VXC_ReadImage(in, input, coord.xy, VXC_5BITOFFSET_XY(0,0),\
        VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
    VXC_ReadImage(para_s16, para, coord.yy, VXC_5BITOFFSET_XY(0,0),\
        VXC_MODIFIER(0, 0, 0, VXC_RM_TowardZero, 0));
    _viv_asm(COPY, paraHlf, para_s16, 4);
    src0 = max(in, 0);
    src1 = min(in, 0);
    _viv_asm(COPY, src, src0, 16);
    src.s4567 = src1.s0123;
    VXC_DP4x4(dst, src, paraHlf, VXC_MODIFIER(0, 3, 0, VXC_RM_ToNearestEven, 1), uniPreluInt16_4x4);
    _viv_asm(COPY, src, src1, 16);
    src.s0123 = src0.s4567;
    VXC_DP4x4(dst, src, paraHlf, VXC_MODIFIER(4, 7, 0, VXC_RM_ToNearestEven, 1), uniPreluInt16_4x4);
    VXC_WriteImage(output, coord, dst, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
}
#endif
