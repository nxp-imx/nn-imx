#include "cl_viv_vx_ext.h"

_viv_uniform int indices_num;

__kernel void vxcGather_i8(
    __read_only image2d_t   input0,
    __read_only image2d_array_t   input1,
    __write_only image2d_t  output,
    int block_size,
    int block_num,
    int axis_num
    )
{
    int gidx = get_global_id(0);  // block_size
    int gidy = get_global_id(1);  // indices_num
    int gidz = get_global_id(2);  // block_num

    int4 coord_in = (int4)(gidy, 0, gidx, 0);
    int4 indice = read_imagei(input1, coord_in.xyyy);
    coord_in.w = gidz * axis_num + indice.x;

    vxc_char16 src;
    VXC_ReadImage(src, input0, coord_in.zw, 0, VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));

    int2 coord = (int2)(gidx, gidz * indices_num + gidy);
    VXC_WriteImage(output, coord, src, VXC_MODIFIER(0, 15, 0, VXC_RM_TowardZero, 0));
}

__kernel void vxcGather_i16(
    __read_only image2d_t   input0,
    __read_only image2d_array_t   input1,
    __write_only image2d_t  output,
    int block_size,
    int block_num,
    int axis_num
    )
{
    int gidx = get_global_id(0);  // block_size
    int gidy = get_global_id(1);  // indices_num
    int gidz = get_global_id(2);  // block_num

    int4 coord_in = (int4)(gidy, 0, gidx, 0);


    int4 indice = read_imagei(input1, coord_in.xyyy);
    coord_in.w = gidz * axis_num + indice.x;

    vxc_short8 src;
    VXC_ReadImage(src, input0, coord_in.zw, 0, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));

    int2 coord = (int2)(gidx, gidz * indices_num + gidy);
    VXC_WriteImage(output, coord, src, VXC_MODIFIER(0, 7, 0, VXC_RM_TowardZero, 0));
}
