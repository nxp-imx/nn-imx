From c770fa44082ed021d92c0e5abf5df83b2d5a4554 Mon Sep 17 00:00:00 2001
From: antkillerfarm <antkillerfarm@gmail.com>
Date: Wed, 24 Mar 2021 14:12:37 +0800
Subject: [PATCH] [VSI_NPU] the patch for armnn v21.02

Change-Id: I1896266fb4fb6852b6ba275deeec6584c696dc25
---
 CMakeLists.txt                                |  9 +++
 cmake/GlobalConfig.cmake                      | 43 +++++++++--
 include/armnn/BackendId.hpp                   |  5 +-
 .../common/include/CommandHandlerFunctor.hpp  |  2 +-
 .../test/layerTests/SoftmaxTestImpl.cpp       | 76 +++++++++----------
 src/profiling/IProfilingServiceStatus.hpp     |  2 +-
 src/profiling/PeriodicCounterCapture.hpp      |  2 +-
 7 files changed, 91 insertions(+), 48 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 4e75c28da..25cd4f2ae 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -52,6 +52,11 @@ if (BUILD_TESTS)
     add_subdirectory(tests)
 endif()
 
+# include verisilicon modified models
+if (BUILD_VSI_TESTS)
+    add_subdirectory(tests/model)
+endif()
+
 # Include the additional cmake files in their own target so that they will appear nicely in IDEs
 add_custom_target(AdditionalCMakeFiles SOURCES ${additional_cmake_files})
 
@@ -645,6 +650,10 @@ if(ARMCOMPUTENEON OR ARMCOMPUTECL)
     target_link_libraries(armnn ${ARMCOMPUTE_LIBRARIES})
 endif()
 
+if(VSI_NPU)
+    target_link_libraries(armnn ${VSINPU_LIBRARIES})
+endif()
+
 if(PROFILING_BACKEND_STREAMLINE AND (NOT ("${CMAKE_SYSTEM_NAME}" STREQUAL Android)))
     target_link_libraries(armnn pthread)
 endif()
diff --git a/cmake/GlobalConfig.cmake b/cmake/GlobalConfig.cmake
index 8a7c9a182..a5fd2b0dc 100644
--- a/cmake/GlobalConfig.cmake
+++ b/cmake/GlobalConfig.cmake
@@ -70,7 +70,7 @@ endif()
 # Compiler flags that are always set
 set(CMAKE_POSITION_INDEPENDENT_CODE ON)
 if(COMPILER_IS_GNU_LIKE)
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14 -Wall -Wextra -Werror -Wold-style-cast -Wno-missing-braces -Wconversion -Wsign-conversion")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++14 -Wall -Wextra -Werror -Wold-style-cast -Wno-missing-braces -Wconversion -Wsign-conversion -Wno-deprecated-declarations -Wno-unused-parameter")
 elseif(${CMAKE_CXX_COMPILER_ID} STREQUAL MSVC)
 	# Disable C4996 (use of deprecated identifier) due to https://developercommunity.visualstudio.com/content/problem/252574/deprecated-compilation-warning-for-virtual-overrid.html
     set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /EHsc /MP /wd4996")
@@ -124,6 +124,8 @@ endif()
 
 set(CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules ${CMAKE_MODULE_PATH})
 
+set(CMAKE_FIND_ROOT_PATH "${CMAKE_FIND_ROOT_PATH};${ARMNN_ROOT};${BOOST_ROOT}")
+
 include(CMakeFindDependencyMacro)
 
 if (NOT BUILD_PIPE_ONLY)
@@ -137,9 +139,11 @@ if (NOT BUILD_PIPE_ONLY)
   endif()
   if (BUILD_UNIT_TESTS)
     add_definitions("-DBOOST_ALL_NO_LIB") # Turn off auto-linking as we specify the libs manually
-    find_package(Boost 1.59 REQUIRED COMPONENTS unit_test_framework)
+    find_package(Boost 1.59 REQUIRED COMPONENTS unit_test_framework program_options)
     include_directories(SYSTEM "${Boost_INCLUDE_DIRS}")
     link_directories(${Boost_LIBRARY_DIRS})
+    message(STATUS "Boost headers are located at: ${Boost_INCLUDE_DIRS}")
+    message(STATUS "Boost library are located at: ${Boost_LIBRARY_DIRS}")
   endif()
 endif()
 
@@ -217,16 +221,14 @@ endif()
 # Flatbuffers support for TF Lite and Armnn Serializer
 if(BUILD_TF_LITE_PARSER OR BUILD_ARMNN_SERIALIZER)
     # verify we have a valid flatbuffers include path
-    find_path(FLATBUFFERS_INCLUDE_PATH flatbuffers/flatbuffers.h
-              HINTS ${FLATBUFFERS_ROOT}/include /usr/local/include /usr/include)
-
+    set(FLATBUFFERS_INCLUDE_PATH "${FLATBUFFERS_ROOT}/include")
     message(STATUS "Flatbuffers headers are located at: ${FLATBUFFERS_INCLUDE_PATH}")
 
     find_library(FLATBUFFERS_LIBRARY
                  NAMES libflatbuffers.a flatbuffers
                  HINTS ${FLATBUFFERS_ROOT}/lib /usr/local/lib /usr/lib)
 
-    message(STATUS "Flatbuffers library located at: ${FLATBUFFERS_LIBRARY}")
+    message(STATUS "Flatbuffers library are located at: ${FLATBUFFERS_LIBRARY}")
 endif()
 
 # Flatbuffers schema support for TF Lite
@@ -309,6 +311,35 @@ if(ARMCOMPUTENEON OR ARMCOMPUTECL)
     endif()
 endif()
 
+# ARM Compute NPU backend
+if(VSI_NPU)
+    # Add preprocessor definition for ARM Compute NPU
+    add_definitions(-DARMCOMPUTENPU_ENABLED)
+    if(NOT DEFINED ENV{OVXLIB_DIR})
+        message(FATAL_ERROR "please set ENV: OVXLIB_DIR")
+    else()
+        set(OVXLIB_DIR $ENV{OVXLIB_DIR})
+        set(OVXLIB_LIB ${OVXLIB_DIR}/lib)
+    endif()
+
+    if(NOT DEFINED ENV{NNRT_ROOT})
+        message(FATAL_ERROR "please set ENV: NNRT_ROOT")
+    else()
+        set(NNRT_ROOT $ENV{NNRT_ROOT})
+        set(NNRT_LIB ${NNRT_ROOT}/nnrt/lib)
+    endif()
+
+    if(NOT DEFINED ENV{VIVANTE_SDK_DIR})
+        message(FATAL_ERROR "please set ENV: VIVANTE_SDK_DIR")
+    else()
+        set(VIVANTE_SDK_ROOT $ENV{VIVANTE_SDK_DIR})
+        set(VIVANTE_SDK_LIB $ENV{VIVANTE_SDK_DIR}/drivers)
+    endif()
+
+    link_libraries(-L${NNRT_LIB} -L${OVXLIB_LIB} -L${VIVANTE_SDK_LIB})
+    set(VSINPU_LIBRARIES ovxlib nnrt)
+endif()
+
 # ARM Compute NEON backend
 if(ARMCOMPUTENEON)
     # Add preprocessor definition for ARM Compute NEON
diff --git a/include/armnn/BackendId.hpp b/include/armnn/BackendId.hpp
index c94cd6666..cb1e65fd0 100644
--- a/include/armnn/BackendId.hpp
+++ b/include/armnn/BackendId.hpp
@@ -26,7 +26,9 @@ enum class Compute
     /// CPU Execution: NEON: ArmCompute
     CpuAcc    = 2,
     /// GPU Execution: OpenCL: ArmCompute
-    GpuAcc    = 3
+    GpuAcc    = 3,
+    /// VSI NPU Execution: VSI PreCompiled kernels
+    VsiNpu    = 4,
 };
 
 /// Deprecated function that will be removed together with
@@ -38,6 +40,7 @@ constexpr char const* GetComputeDeviceAsCString(Compute compute)
         case armnn::Compute::CpuRef: return "CpuRef";
         case armnn::Compute::CpuAcc: return "CpuAcc";
         case armnn::Compute::GpuAcc: return "GpuAcc";
+        case armnn::Compute::VsiNpu: return "VsiNpu";
         default:                     return "Unknown";
     }
 }
diff --git a/profiling/common/include/CommandHandlerFunctor.hpp b/profiling/common/include/CommandHandlerFunctor.hpp
index 9827aa05b..3abe259e9 100644
--- a/profiling/common/include/CommandHandlerFunctor.hpp
+++ b/profiling/common/include/CommandHandlerFunctor.hpp
@@ -5,7 +5,7 @@
 
 #pragma once
 
-#include <Packet.hpp>
+#include <common/include/Packet.hpp>
 #include <cstdint>
 
 namespace arm
diff --git a/src/backends/backendsCommon/test/layerTests/SoftmaxTestImpl.cpp b/src/backends/backendsCommon/test/layerTests/SoftmaxTestImpl.cpp
index c4cc91411..7f2e7da09 100644
--- a/src/backends/backendsCommon/test/layerTests/SoftmaxTestImpl.cpp
+++ b/src/backends/backendsCommon/test/layerTests/SoftmaxTestImpl.cpp
@@ -173,8 +173,8 @@ LayerTestResult<T, 2> SimpleSoftmaxTestImpl(
                 {
                         0.643914213228014f, 0.643914213228014f, 0.236882800924671f, 0.236882800924671f,
                         0.087144312427294f,
-                        0.087144312427294f, 0.032058600957022f, 0.032058600957022f, 7.246299848982885e-08f,
-                        7.246299848982885e-08f
+                        0.087144312427294f, 0.032058600957022f, 0.032058600957022f, 0.0f,
+                        0.0f
                 };
         break;
         }
@@ -191,9 +191,9 @@ LayerTestResult<T, 2> SimpleSoftmaxTestImpl(
         outputData =
                 {
                         0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,
-                        7.246299848982885e-08f,
+                        0.0f,
                         0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,
-                        7.246299848982885e-08f
+                        0.0f
                 };
         break;
         }
@@ -371,8 +371,8 @@ LayerTestResult<float,3> Simple3dAxisSoftmaxTest(
 
                             0.087144312427294f, 0.087144312427294f, 0.032058600957022f, 0.032058600957022f,
                             0.032058600957022f,
-                            0.032058600957022f, 7.246299848982885e-08f, 7.246299848982885e-08f, 7.246299848982885e-08f,
-                            7.246299848982885e-08f
+                            0.032058600957022f, 0.0f, 0.0f, 0.0f,
+                            0.0f
                     };
             break;
         }
@@ -392,13 +392,13 @@ LayerTestResult<float,3> Simple3dAxisSoftmaxTest(
                     {
                             0.643914213228014f, 0.643914213228014f, 0.236882800924671f, 0.236882800924671f,
                             0.087144312427294f,
-                            0.087144312427294f, 0.032058600957022f, 0.032058600957022f, 7.246299848982885e-08f,
-                            7.246299848982885e-08f,
+                            0.087144312427294f, 0.032058600957022f, 0.032058600957022f, 0.0f,
+                            0.0f,
 
                             0.643914213228014f, 0.643914213228014f, 0.236882800924671f, 0.236882800924671f,
                             0.087144312427294f,
-                            0.087144312427294f, 0.032058600957022f, 0.032058600957022f, 7.246299848982885e-08f,
-                            7.246299848982885e-08f
+                            0.087144312427294f, 0.032058600957022f, 0.032058600957022f, 0.0f,
+                            0.0f
                     };
         break;
         }
@@ -416,14 +416,14 @@ LayerTestResult<float,3> Simple3dAxisSoftmaxTest(
             outputData =
                     {
                             0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,
-                            7.246299848982885e-08f,
+                            0.0f,
                             0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,
-                            7.246299848982885e-08f,
+                            0.0f,
 
                             0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,
-                            7.246299848982885e-08f,
+                            0.0f,
                             0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,
-                            7.246299848982885e-08f
+                            0.0f
                     };
             break;
         }
@@ -484,10 +484,10 @@ LayerTestResult<float,4> Simple4dAxisSoftmaxTest(
                             0.032058600957022f,
                             0.032058600957022f, 0.032058600957022f, 0.032058600957022f, 0.032058600957022f,
                             0.032058600957022f,
-                            0.032058600957022f, 0.032058600957022f, 7.246299848982885e-08f, 7.246299848982885e-08f,
-                            7.246299848982885e-08f,
-                            7.246299848982885e-08f, 7.246299848982885e-08f, 7.246299848982885e-08f,
-                            7.246299848982885e-08f, 7.246299848982885e-08f
+                            0.032058600957022f, 0.032058600957022f, 0.0f, 0.0f,
+                            0.0f,
+                            0.0f, 0.0f, 0.0f,
+                            0.0f, 0.0f
                     };
             break;
         }
@@ -512,8 +512,8 @@ LayerTestResult<float,4> Simple4dAxisSoftmaxTest(
                             0.087144312427294f,
                             0.087144312427294f, 0.087144312427294f, 0.032058600957022f, 0.032058600957022f,
                             0.032058600957022f,
-                            0.032058600957022f, 7.246299848982885e-08f, 7.246299848982885e-08f, 7.246299848982885e-08f,
-                            7.246299848982885e-08f,
+                            0.032058600957022f, 0.0f, 0.0f, 0.0f,
+                            0.0f,
 
 
                             0.643914213228014f, 0.643914213228014f, 0.643914213228014f, 0.643914213228014f,
@@ -522,8 +522,8 @@ LayerTestResult<float,4> Simple4dAxisSoftmaxTest(
                             0.087144312427294f,
                             0.087144312427294f, 0.087144312427294f, 0.032058600957022f, 0.032058600957022f,
                             0.032058600957022f,
-                            0.032058600957022f, 7.246299848982885e-08f, 7.246299848982885e-08f, 7.246299848982885e-08f,
-                            7.246299848982885e-08f
+                            0.032058600957022f, 0.0f, 0.0f, 0.0f,
+                            0.0f
                     };
             break;
         }
@@ -544,21 +544,21 @@ LayerTestResult<float,4> Simple4dAxisSoftmaxTest(
                 {
                         0.643914213228014f, 0.643914213228014f, 0.236882800924671f, 0.236882800924671f,
                         0.087144312427294f,
-                        0.087144312427294f, 0.032058600957022f, 0.032058600957022f, 7.246299848982885e-08f,
-                        7.246299848982885e-08f,
+                        0.087144312427294f, 0.032058600957022f, 0.032058600957022f, 0.0f,
+                        0.0f,
                         0.643914213228014f, 0.643914213228014f, 0.236882800924671f, 0.236882800924671f,
                         0.087144312427294f,
-                        0.087144312427294f, 0.032058600957022f, 0.032058600957022f, 7.246299848982885e-08f,
-                        7.246299848982885e-08f,
+                        0.087144312427294f, 0.032058600957022f, 0.032058600957022f, 0.0f,
+                        0.0f,
 
                         0.643914213228014f, 0.643914213228014f, 0.236882800924671f, 0.236882800924671f,
                         0.087144312427294f,
-                        0.087144312427294f, 0.032058600957022f, 0.032058600957022f, 7.246299848982885e-08f,
-                        7.246299848982885e-08f,
+                        0.087144312427294f, 0.032058600957022f, 0.032058600957022f, 0.0f,
+                        0.0f,
                         0.643914213228014f, 0.643914213228014f, 0.236882800924671f, 0.236882800924671f,
                         0.087144312427294f,
-                        0.087144312427294f, 0.032058600957022f, 0.032058600957022f, 7.246299848982885e-08f,
-                        7.246299848982885e-08f
+                        0.087144312427294f, 0.032058600957022f, 0.032058600957022f, 0.0f,
+                        0.0f
                 };
         break;
         }
@@ -578,22 +578,22 @@ LayerTestResult<float,4> Simple4dAxisSoftmaxTest(
             outputData =
                     {
                             0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,
-                            7.246299848982885e-08f,
+                            0.0f,
                             0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,
-                            7.246299848982885e-08f,
+                            0.0f,
                             0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,
-                            7.246299848982885e-08f,
+                            0.0f,
                             0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,
-                            7.246299848982885e-08f,
+                            0.0f,
 
                             0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,
-                            7.246299848982885e-08f,
+                            0.0f,
                             0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,
-                            7.246299848982885e-08f,
+                            0.0f,
                             0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,
-                            7.246299848982885e-08f,
+                            0.0f,
                             0.643914213228014f, 0.236882800924671f, 0.087144312427294f, 0.032058600957022f,
-                            7.246299848982885e-08f
+                            0.0f
                     };
             break;
         }
diff --git a/src/profiling/IProfilingServiceStatus.hpp b/src/profiling/IProfilingServiceStatus.hpp
index 45d4aac08..a25749264 100644
--- a/src/profiling/IProfilingServiceStatus.hpp
+++ b/src/profiling/IProfilingServiceStatus.hpp
@@ -5,7 +5,7 @@
 
 #pragma once
 
-#include <Packet.hpp>
+#include <common/include/Packet.hpp>
 #include <armnn/profiling/ILocalPacketHandler.hpp>
 
 #include <cstdint>
diff --git a/src/profiling/PeriodicCounterCapture.hpp b/src/profiling/PeriodicCounterCapture.hpp
index ac084af3d..895731af6 100644
--- a/src/profiling/PeriodicCounterCapture.hpp
+++ b/src/profiling/PeriodicCounterCapture.hpp
@@ -7,7 +7,7 @@
 
 #include "IPeriodicCounterCapture.hpp"
 #include "Holder.hpp"
-#include <Packet.hpp>
+#include <common/include/Packet.hpp>
 #include "SendCounterPacket.hpp"
 #include "ICounterValues.hpp"
 #include "CounterIdMap.hpp"
-- 
2.25.1

