#include $(AQROOT)/makefile.linux.def

OVXLIB_DIR = $(AQROOT)/ovxlib
ifeq ($(OVXLIB_DIR),)
$(error Please set OVXLIB_DIR env first)
endif
OVX_INC ?= $(SDKTARGETSYSROOT)/usr/include
INCLUDE += -I$(OVX_INC)
INCLUDE += -I$(OVXLIB_DIR)/include/ops -I$(OVXLIB_DIR)/include/utils -I$(OVXLIB_DIR)/include/inference
INCLUDE += -I$(OVXLIB_DIR)/include/client -I$(OVXLIB_DIR)/include -I$(OVXLIB_DIR)/include/libnnext
INCLUDE += -I$(OVXLIB_DIR)/include/platform
INCLUDE += -I ../ -I ./boost/libs/preprocessor/include/

# git head shaid
HEAD_VERSION=$(shell git log -n 1 --format=%h)

ifneq ($(HEAD_VERSION),)
DIRTY=$(shell git diff --quiet HEAD || echo '-dirty')
CFLAGS += -D 'GIT_STRING=$(HEAD_VERSION)$(DIRTY)'
$(info "add git head version $(HEAD_VERSION)$(DIRTY)")
endif

CFLAGS += $(INCLUDE) -std=c++11
CFLAGS += -D'OVXLIB_API=__attribute__((visibility("default")))'
CFLAGS += -DNNRT_ENABLE_TENSOR_FROM_HANDLE
CFLAGS += -DLINUX
CC      = $(CXX) -pthread
################################################################################
# Supply necessary libraries.

LIBS += -L$(AQROOT) -l ovxlib
#LIBS += -lm

#############################################################################
# Macros.
ifeq ($(gcdSTATIC_LINK), 1)
STATIC=1
TARGET_NAME  = libnnrt.a
else
CFLAGS += -fPIC
DYNAMIC      := 1
TARGET_NAME  = libnnrt.so.1.1.8
TARGET_LINKS  := libnnrt.so.1 libnnrt.so.1.1 libnnrt.so
endif

#############################################################################
# Objects.
vpath %.cpp ./
OBJECTS = $(OBJ_DIR)/file_map_memory.o \
        $(OBJ_DIR)/memory_pool.o \
        $(OBJ_DIR)/model.o \
        $(OBJ_DIR)/compilation.o \
        $(OBJ_DIR)/event.o \
        $(OBJ_DIR)/utils.o \
        $(OBJ_DIR)/logging.o \
        $(OBJ_DIR)/execution.o \
        $(OBJ_DIR)/execution_task.o \
        $(OBJ_DIR)/prepared_model.o \
        $(OBJ_DIR)/ovxlib_delegate.o

vpath %.cpp ./model_transform
OBJECTS += \
        $(OBJ_DIR)/layout_inference.o \
        $(OBJ_DIR)/align_broadcast_op.o \
        $(OBJ_DIR)/transformations.o \
        $(OBJ_DIR)/optimize_permute.o \
        $(OBJ_DIR)/fp32tofp16.o \
        $(OBJ_DIR)/validate_quantized_graph.o \
        $(OBJ_DIR)/nnapi_interpreter.o

vpath %.cpp ./api_requirement
OBJECTS += \
        $(OBJ_DIR)/nnapi_requirement.o \
        $(OBJ_DIR)/spec.o

vpath %.cpp ./op
OBJECTS += \
        $(OBJ_DIR)/convolution.o\
        $(OBJ_DIR)/normalization.o\
        $(OBJ_DIR)/elementwise.o\
        $(OBJ_DIR)/operand.o\
        $(OBJ_DIR)/operation.o\
        $(OBJ_DIR)/pooling.o\

ifeq ($(DUMP_JSON_MODEL), 1)
vpath %.cpp ./dump_model
OBJECTS += \
        $(OBJ_DIR)/dump_json_model.o \
        $(OBJ_DIR)/jsoncpp.o
CFLAGS+=-D_DUMP_JSON_MODEL_
endif

# installation directory
# INSTALL_DIR := $(VIVANTE_SDK_LIB)

################################################################################
# Include the common makefile.

include $(AQROOT)/common.target

################################################################################
# Extra installation.

install: extra_install build_link

.PHONY: extra_install build_link
extra_install:
	@-cp -rf $(AQROOT)/nn_runtime/nnrt/bin_r/libnnrt.so* $(AQROOT)
build_link:
ifneq ($(gcdSTATIC_LINK), 1)
	@for lib in $(TARGET_LINKS); do \
                ln -sf $(notdir $(TARGET_NAME)) $(AQROOT)/$$lib; \
        done
endif
